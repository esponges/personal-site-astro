---
interface Post {
  id: number;
  title: string;
  description: string;
  cover_image: string;
  url: string;
  published_at: string;
  tag_list: string[];
  reading_time_minutes: number;
}

// Function to fetch posts from Dev.to API
async function getPosts() {
  try {
    const response = await fetch('https://dev.to/api/articles?username=fertostado');
    const posts = await response.json();
    return posts as Post[];
  } catch (error) {
    console.error('Error fetching posts:', error);
    return [];
  }
}

const posts = await getPosts();

// Format date to be more readable
function formatDate(date: string) {
  return new Date(date).toLocaleDateString('en-US', {
    year: 'numeric',
    month: 'long',
    day: 'numeric'
  });
}
---

<div class="grid grid-cols-1 gap-8 py-8 md:grid-cols-2 lg:grid-cols-3">
  {
    posts.map((post) => (
      <a
        href={post.url}
        target="_blank"
        rel="noopener noreferrer"
        class="group flex flex-col rounded-lg border border-transparent px-5 py-4 transition-colors hover:border-gray-300 hover:bg-gray-100 hover:dark:border-neutral-700 hover:dark:bg-neutral-800/30"
      >
        {post.cover_image && (
          <img
            src={post.cover_image}
            alt={post.title}
            class="mb-4 rounded-lg object-cover w-full h-48"
            loading="lazy"
          />
        )}
        <h2 class="mb-3 text-2xl font-semibold text-gray-100">
          {post.title}
          <span class="inline-block transition-transform group-hover:translate-x-1 motion-reduce:transform-none">
            -&gt;
          </span>
        </h2>
        <p class="m-0 text-sm opacity-50 flex-grow">
          {post.description}
        </p>
        <div class="mt-4 flex flex-wrap gap-2">
          {post.tag_list.map((tag) => (
            <span class="rounded-full bg-gray-700 px-3 py-1 text-sm text-gray-200">
              {tag}
            </span>
          ))}
        </div>
        <div class="mt-4 flex justify-between items-center text-sm opacity-50">
          <span>{formatDate(post.published_at)}</span>
          <span>{post.reading_time_minutes} min read</span>
        </div>
      </a>
    ))
  }
  {
    posts.length === 0 && (
      <div class="col-span-full text-center py-12">
        <p class="text-lg text-gray-400">
          No posts found. Please check back later!
        </p>
      </div>
    )
  }
</div> 
