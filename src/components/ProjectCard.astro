---
import { IMAGEKIT_URL } from "astro:env/client";
import type { Project, Image, Lib } from '@prisma/client';

interface Props {
  project: Project & {
    images: Image[];
    libs: Lib[];
  };
}

const { project } = Astro.props;
---

<div class="group relative overflow-hidden rounded-xl bg-gradient-to-br from-gray-900 to-gray-800 transition-all duration-300 hover:shadow-xl hover:shadow-gray-700/20">
  <div class="p-6 sm:p-8">
    <h2 class="text-3xl font-bold text-transparent bg-clip-text bg-gradient-to-r from-blue-400 to-teal-400">
      {project.name}
    </h2>
    {project.url && (
      <div class="mt-4 transform transition-all duration-300 group-hover:translate-x-2">
        <a 
          href={project.url} 
          class="inline-flex items-center text-blue-400 hover:text-blue-300 break-all group-hover:underline"
          target="_blank"
          rel="noopener noreferrer"
        >
          <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" viewBox="0 0 20 20" fill="currentColor">
            <path d="M11 3a1 1 0 100 2h2.586l-6.293 6.293a1 1 0 101.414 1.414L15 6.414V9a1 1 0 102 0V4a1 1 0 00-1-1h-5z" />
            <path d="M5 5a2 2 0 00-2 2v8a2 2 0 002 2h8a2 2 0 002-2v-3a1 1 0 10-2 0v3H5V7h3a1 1 0 000-2H5z" />
          </svg>
          {project.url}
        </a>
      </div>
    )}
    <h3 class="text-xl font-semibold text-gray-100 mt-6 mb-3">{project.subheader}</h3>
    <p class="text-gray-300 leading-relaxed">
      {project.description}
    </p>
  </div>

  {project.repoUrl && (
    <div class="mx-6 mb-6 rounded-lg border border-gray-700/50 bg-gray-800/50 p-4 backdrop-blur-sm transition-all duration-300 hover:border-gray-600">
      <p class="text-gray-300 font-medium mb-3">Repository</p>
      <div class="flex items-center gap-3">
        {project.repoUrl.includes("github") && (
          <a href={project.repoUrl} class="text-gray-400 hover:text-gray-200 transition-colors" target="_blank" rel="noopener noreferrer">
            <svg class="w-6 h-6" fill="currentColor" viewBox="0 0 24 24">
              <path d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z"/>
            </svg>
          </a>
        )}
        <a href={project.repoUrl} class="text-blue-400 hover:text-blue-300 break-all transition-colors" target="_blank" rel="noopener noreferrer">
          {project.repoUrl}
        </a>
      </div>
    </div>
  )}

  {project.images.length > 0 && (
    <div class="relative p-6">
      <div class="grid gap-4 grid-cols-1 md:grid-cols-2">
        {project.images.map((img) => (
          <div class="relative overflow-hidden rounded-lg transform transition-all duration-500 hover:scale-[1.02]">
            {img.path ? (
              <img
                src={`${IMAGEKIT_URL}/${img.path}`}
                alt={img.alt || project.name}
                class="w-full h-auto object-cover shadow-lg"
                loading="lazy"
              />
            ) : img.url ? (
              <img
                src={img.url}
                alt={img.alt || project.name}
                class="w-full h-auto object-cover shadow-lg"
                loading="lazy"
              />
            ) : null}
          </div>
        ))}
      </div>
    </div>
  )}

  <div class="px-6 pb-6">
    <h3 class="text-xl font-semibold text-gray-100 mb-4">Technologies</h3>
    <div class="space-y-4">
      <div class="flex flex-wrap gap-2">
        {project.libs.map((lib) => (
          <a 
            href={lib.url}
            class="px-3 py-1 rounded-full bg-blue-500/10 text-blue-400 hover:bg-blue-500/20 transition-colors text-sm font-medium"
            target="_blank"
            rel="noopener noreferrer"
          >
            {lib.name}
          </a>
        ))}
      </div>
      <div class="flex items-center gap-2 text-sm text-gray-400">
        <span class="font-semibold">Stack:</span>
        <div class="flex flex-wrap gap-2">
          {project.tags.split(',').map((tag: string) => (
            <span class="px-2 py-1 rounded-md bg-gray-800/50 border border-gray-700/30">
              {tag.trim()}
            </span>
          ))}
        </div>
      </div>
    </div>
  </div>
</div>
